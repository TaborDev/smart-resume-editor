name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, feature/develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: smart_resume_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8.10.0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Type check
        run: pnpm type-check
        continue-on-error: false
      
      - name: Lint
        run: pnpm lint
        continue-on-error: false
      
      - name: Run tests
        run: pnpm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smart_resume_test
          REDIS_URL: redis://localhost:6379
        continue-on-error: false
      
      - name: Build all packages
        run: pnpm build

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8.10.0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build webapp for testing
        run: pnpm --filter webapp build
      
      - name: Install Playwright browsers
        run: pnpm --filter webapp exec playwright install --with-deps
      
      - name: Run E2E tests
        run: pnpm test:e2e
        continue-on-error: false

  deploy-staging:
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature/develop'
    needs: [test, e2e]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          echo "Branch: ${{ github.ref }}"
          # Add actual deployment commands here